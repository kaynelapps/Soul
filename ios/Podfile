source 'https://cdn.cocoapods.org/'
platform :ios, '12.0'

install! 'cocoapods',
  :disable_input_output_paths => true,
  :deterministic_uuids => false

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Add these Firebase pod specifications
  pod 'Firebase/Storage', '~> 10.19.0'
  pod 'Firebase/Auth', '~> 10.19.0'
  pod 'Firebase/AppCheck', '~> 10.19.0'

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

pre_install do |installer|
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
end

post_install do |installer|
  installer.pods_project.build_configurations.each do |config|
    config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
  end

  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] = [
        '$(inherited)',
        '$(PODS_ROOT)/Flutter',
        '$(PODS_CONFIGURATION_BUILD_DIR)',
        '$(PODS_ROOT)/../Flutter',
        '$(SRCROOT)/../Flutter'
      ]

      if target.respond_to?(:product_type) && target.product_type == "com.apple.product-type.bundle"
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        config.build_settings['WRAPPER_EXTENSION'] = 'bundle'
        config.build_settings['SKIP_INSTALL'] = 'NO'
        config.build_settings['GENERATE_INFOPLIST_FILE'] = 'YES'
        config.build_settings['GENERATE_PKGINFO_FILE'] = 'YES'
        config.build_settings['PRODUCT_BUNDLE_IDENTIFIER'] = "#{target.name.gsub('_privacy','')}"
        config.build_settings['PRODUCT_NAME'] = "#{target.name}"
      end
    end
  end
end
